@model TICRM.DTOs.EmailTemplateDTO

@{
    ViewBag.Title = "Edit Email Templates";
}






        <!-- BEGIN: Subheader -->
        <div class="m-subheader ">
            <div class="d-flex align-items-center">
                <div class="mr-auto">
                    <h3 class="m-subheader__title m-subheader__title--separator">Email Templates</h3>
                    <ul class="m-subheader__breadcrumbs m-nav m-nav--inline">
                        <li class="m-nav__item m-nav__item--home">
                            <a href="@Url.Action("Index","Dashboard")" class="m-nav__link m-nav__link--icon">
                                <i class="m-nav__link-icon la la-home"></i>
                            </a>
                        </li>
                        <li class="m-nav__separator">-</li>
                        <li class="m-nav__item">
                            <a href="@Url.Action("Index","EmailTemplates")" class="m-nav__link">
                                <span class="m-nav__link-text">Email Templates</span>
                            </a>
                        </li>
                        <li class="m-nav__separator">-</li>
                        <li class="m-nav__item">
                            <a href="@Url.Action("Edit","EmailTemplates",new { id = Model.EmailTemplateId})" class="m-nav__link">
                                <span class="m-nav__link-text">@ViewBag.Title</span>
                            </a>
                        </li>
                    </ul>
                </div>

            </div>
        </div>

        <!-- END: Subheader -->
        <div class="m-content">
            <div class="row">
                <div class="col-lg-12">
                    <!--begin::Portlet-->
                    <div class="m-portlet">


                        @*<div class="m-portlet__head">
                                <div class="m-portlet__head-caption">
                                    <div class="m-portlet__head-title">
                                        <span class="m-portlet__head-icon m--hide">
                                            <i class="la la-gear"></i>
                                        </span>
                                        <h3 class="m-portlet__head-text">
                                            2 Columns Form Layout
                                        </h3>
                                    </div>
                                </div>
                            </div>*@

                        <!--begin::Form-->

                        @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "EditEmailTemplate", @class = "m-form m-form--fit m-form--label-align-right m-form--group-seperator-dashed" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="m-portlet__body">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.EmailTemplateId)



                                <div class="form-group m-form__group row">

                                    <div class="col-lg-6 col-sm-12 col-md-12 col-xs-12">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.EmailConfigurationId, "EmailConfigurationId", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.DropDownList("EmailConfigurationId", null, htmlAttributes: new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.EmailConfigurationId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.WorkFlowId, "WorkFlowId", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.DropDownList("WorkFlowId", null, htmlAttributes: new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.WorkFlowId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group" style="display:none;">
                                            @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Body, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                    </div>
                                    <div class="col-lg-6 col-sm-12 col-md-12 col-xs-12"></div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-12">
                                            <div class="adjoined-bottom">
                                                <div class="grid-container">
                                                    <div class="grid-width-100">
                                                        <div id="editor">

                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                          


                            </div>
                            <div class="m-portlet__foot m-portlet__no-border m-portlet__foot--fit">
                                <div class="m-form__actions m-form__actions--solid">
                                    <div class="row">
                                        <div class="col-lg-6">
                                            <button type="button" id="btnSubmit" class="btn btn-success"><i class="la la-save"></i> Submit</button>
                                            <button type="reset" class="btn btn-secondary"><i class="la la-refresh"></i> Cancel</button>
                                        </div>
                                        <div class="col-lg-6 m--align-right">
                                            <a href="/EmailTemplates/Index" class="btn btn-secondary m-btn m-btn--icon m-btn--wide m-btn--md m--margin-right-10">
                                                <span>
                                                    <i class="la la-arrow-left"></i>
                                                    <span>Back to List</span>
                                                </span>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        }
                        <!--end::Form-->
                    </div>
                    <!--end::Portlet-->
                </div>
            </div>
        </div>
    


@section scripts{



    <script src="~/Content/plugins/ckeditor/ckeditor.js"></script>

    <script>

        $(document).on('click', '#btnSubmit', function () {

            $('#Body').val(CKEDITOR.instances['editor'].getData());

            mApp.blockPage({
                overlayColor: "#000000",
                type: "loader",
                state: "primary",
                message: "Processing..."
            });
            $('#EditEmailTemplate').submit();
        });


        $(document).ready(function () {
            initSample();
            CKEDITOR.instances['editor'].setData($('#Body').val());
        });

   

        if (CKEDITOR.env.ie && CKEDITOR.env.version < 9)
            CKEDITOR.tools.enableHtml5Elements(document);

        // The trick to keep the editor in the sample quite small
        // unless user specified own height.
        CKEDITOR.config.height = 150;
        CKEDITOR.config.width = 'auto';

        var initSample = (function () {
            var wysiwygareaAvailable = isWysiwygareaAvailable(),
                isBBCodeBuiltIn = !!CKEDITOR.plugins.get('bbcode');

            return function () {
                var editorElement = CKEDITOR.document.getById('editor');

                // :(((
                if (isBBCodeBuiltIn) {
                    editorElement.setHtml(
                        'Hello world Pakistan!\n\n' +
                        'I\'m an instance of [url=https://ckeditor.com]CKEditor[/url].'
                    );
                }

                // Depending on the wysiwygarea plugin availability initialize classic or inline editor.
                if (wysiwygareaAvailable) {
                    CKEDITOR.replace('editor');
                } else {
                    editorElement.setAttribute('contenteditable', 'true');
                    CKEDITOR.inline('editor');

                    // TODO we can consider displaying some info box that
                    // without wysiwygarea the classic editor may not work.
                }
            };

            function isWysiwygareaAvailable() {
                // If in development mode, then the wysiwygarea must be available.
                // Split REV into two strings so builder does not replace it :D.
                if (CKEDITOR.revision == ('%RE' + 'V%')) {
                    return true;
                }

                return !!CKEDITOR.plugins.get('wysiwygarea');
            }
        })();

      
     ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////




    </script>
}






