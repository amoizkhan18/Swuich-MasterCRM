@model TICRM.DTOs.CategoryDto

@{
    ViewBag.Title = "Create Category";
}

<!-- BEGIN: Subheader -->
<div class="m-subheader ">
    <div class="d-flex align-items-center">
        <div class="mr-auto">
            <h3 class="m-subheader__title m-subheader__title--separator">Category</h3>
            <ul class="m-subheader__breadcrumbs m-nav m-nav--inline">
                <li class="m-nav__item m-nav__item--home">
                    <a href="@Url.Action("Index","Dashboard")" class="m-nav__link m-nav__link--icon">
                        <i class="m-nav__link-icon la la-home"></i>
                    </a>
                </li>
                <li class="m-nav__separator">-</li>
                <li class="m-nav__item">
                    <a href="@Url.Action("Index","Categories")" class="m-nav__link">
                        <span class="m-nav__link-text">Category</span>
                    </a>
                </li>
                <li class="m-nav__separator">-</li>
                <li class="m-nav__item">
                    <a href="@Url.Action("Create","Categories")" class="m-nav__link">
                        <span class="m-nav__link-text">@ViewBag.Title</span>
                    </a>
                </li>
            </ul>
        </div>

    </div>
</div>

<!-- END: Subheader -->
<div class="m-content">
    <div class="row">
        <div class="col-lg-12">
            <!--begin::Portlet-->
            <div class="m-portlet">

                <!--begin::Form-->

                @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "CategoryCreateForm", @class = "m-form m-form--fit m-form--label-align-right m-form--group-seperator-dashed" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="m-portlet__body">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group m-form__group row">

                            <div class="col-lg-6 m--margin-top-10">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-lg-6 m--margin-top-10">
                                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-lg-6 m--margin-top-10">
                                @Html.LabelFor(model => model.StatusId, "StatusId", htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownList("StatusId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-lg-6 m--margin-top-10">
                                @Html.LabelFor(model => model.AssignedUser, "AssignedUser", htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownList("AssignedUser", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.AssignedUser, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-lg-6 m--margin-top-10">
                                @Html.LabelFor(model => model.AssignedTeam, "AssignedTeam", htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownList("AssignedTeam", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.AssignedTeam, "", new { @class = "text-danger" })
                            </div>

                        </div>
                    </div>
                    <div class="m-portlet__foot m-portlet__no-border m-portlet__foot--fit">
                        <div class="m-form__actions m-form__actions--solid">
                            <div class="row">
                                <div class="col-lg-6">
                                    <button type="button" id="savebtn" class="btn btn-success"><i class="la la-save"></i> Submit</button>
                                    <button type="reset" class="btn btn-secondary"><i class="la la-refresh"></i> Cancel</button>
                                </div>
                                <div class="col-lg-6 m--align-right">
                                    <a href="/Categories/Index" class="btn btn-secondary m-btn m-btn--icon m-btn--wide m-btn--md m--margin-right-10">
                                        <span>
                                            <i class="la la-arrow-left"></i>
                                            <span>Back to List</span>
                                        </span>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>

                }
                <!--end::Form-->
            </div>
            <!--end::Portlet-->
        </div>
    </div>
</div>



@section scripts{
    <script>

        $('#savebtn').on('click', function () {
            mApp.blockPage({
                overlayColor: "#000000",
                type: "loader",
                state: "primary",
                message: "Processing..."
            })
            $('#CategoryCreateForm').submit();
        });


        //var LoadModalForDetails = function (id) {
        //    // not remove this function because it use for open details of account form search click it use in easy auto complte funtion contact to development branch
        //    // in master page use in EasyautoCompleteSearch
        //    $('body').addClass('m-page--loading');
        //    $.ajax({
        //        type: "GET",
        //        url: "/EmailConfigurations/PartialDetailsOnId",
        //        data: { id: id },
        //        contentType: "application/json; charset=utf-8",
        //        dataType: "text",
        //        success: function (response) {
        //            $('.modal-content').html('').html(response);
        //            $('#m_modal_Details').modal('show');
        //            $('body').removeClass('m-page--loading');
        //        },
        //        failure: function () {
        //            alert("Failed!");
        //            $('body').removeClass('m-page--loading');
        //        }
        //    });
        //}

    </script>
}





