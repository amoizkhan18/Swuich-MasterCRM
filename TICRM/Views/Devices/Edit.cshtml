@model TICRM.DTOs.DeviceViewModel

@{
    ViewBag.Title = "Edit Device";
}


<!-- BEGIN: Subheader -->
<div class="m-subheader ">
    <div class="d-flex align-items-center">
        <div class="mr-auto">
            <h3 class="m-subheader__title m-subheader__title--separator">Devices</h3>
            <ul class="m-subheader__breadcrumbs m-nav m-nav--inline">
                <li class="m-nav__item m-nav__item--home">
                    <a href="@Url.Action(" Index","Dashboard")" class="m-nav__link m-nav__link--icon">
                        <i class="m-nav__link-icon la la-home"></i>
                    </a>
                </li>
                <li class="m-nav__separator">-</li>
                <li class="m-nav__item">
                    <a href="@Url.Action(" Index","Devices")" class="m-nav__link">
                        <span class="m-nav__link-text">Devices</span>
                    </a>
                </li>
                <li class="m-nav__separator">-</li>
                <li class="m-nav__item">
                    <a href="@Url.Action(" Edit","Devices",new { id=Model.DeviceId })" class="m-nav__link">
                        <span class="m-nav__link-text">@ViewBag.Title</span>
                    </a>
                </li>
            </ul>
        </div>

    </div>
</div>

<!-- END: Subheader -->
<div class="m-content">
    <div class="row">
        <div class="col-lg-12">
            <!--begin::Portlet-->
            <div class="m-portlet">

                <!--begin::Form-->
                @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "DevicesEditForm", @class = "m-form m-form--fit m-form--label-align-right m-form--group-seperator-dashed" }))
                {
                @Html.AntiForgeryToken()
                <div class="m-portlet__body">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.DeviceId)
                    <div class="form-group m-form__group row">

                        <div class="col-lg-6 col-sm-12 col-md-12 col-xs-12">



                            <div class="form-group">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control"} })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Mac, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Mac, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Mac, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EMEINumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.EMEINumber, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EMEINumber, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.RegistrationDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.RegistrationDate, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.RegistrationDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.StatusId, "Status", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("StatusId", null, "-- Select --", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>

                        <div class="col-lg-6 col-sm-12 col-md-12 col-xs-12">

                            <div class="form-group">
                                @Html.LabelFor(model => model.AccountId, "AccountId", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("AccountId", null, "-- Select --", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.AccountId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.CustomerAssetId, "CustomerAssetId", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("CustomerAssetId", null, "-- Select --", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.CustomerAssetId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.AssignedUser, "Assigned User", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("AssignedUser", null, "-- Select --", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.AssignedUser, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.AssignedTeam, "Assigned Team", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("AssignedTeam", null, "-- Select --", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.AssignedTeam, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Maintenance, "Maintenance", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("Maintenance", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Maintenance, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="form-group">
                                @Html.LabelFor(model => model.CloudServices, "CloudServices", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("CloudServices", null, "-- Select --", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.CloudServices, "", new { @class = "text-danger" })
                                </div>
                            </div>


                        </div>

                    </div>

                </div>
                <div class="m-portlet__foot m-portlet__no-border m-portlet__foot--fit">
                    <div class="m-form__actions m-form__actions--solid">
                        <div class="row">
                            <div class="col-lg-6">
                                <button type="button" id="savebtn" class="btn btn-success"><i class="la la-save"></i> Submit</button>
                                <button type="reset" class="btn btn-secondary"><i class="la la-refresh"></i> Cancel</button>
                                <button type="button" onclick="Get_CloudService()" class="btn btn-secondary"><i class="la la-medium"></i> Open Cloud Service</button>
                            </div>
                            <div class="col-lg-6 m--align-right">
                                <a href="/Devices/Index" class="btn btn-secondary m-btn m-btn--icon m-btn--wide m-btn--md m--margin-right-10">
                                    <span>
                                        <i class="la la-arrow-left"></i>
                                        <span>Back to List</span>
                                    </span>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>



                <!-- begin::ModalForIBM -->
                <div class="modal fade" id="m_modal_IBM" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" style="display: none;" aria-hidden="true">
                    <div class="modal-dialog modal-lg" role="document">
                        <div class="modal-content">
                            <div class="m-portlet m-portlet--tabs">
                                <div class="m-portlet__head">
                                    <div class="m-portlet__head-tools">
                                        <ul class="nav nav-tabs m-tabs-line m-tabs-line--success m-tabs-line--2x" role="tablist">
                                            <li class="nav-item m-tabs__item">
                                                <a class="nav-link m-tabs__link active show" data-toggle="tab" href="#m_portlet_tab_IBMCloud" role="tab" aria-selected="true">
                                                    <i class="la la-user-md"></i> IBM CLoud
                                                </a>
                                            </li>

                                        </ul>
                                    </div>
                                </div>
                                <div class="m-portlet__body">
                                    <div class="tab-content">
                                        <div class="tab-pane active show" id="m_portlet_tab_IBMCloud" role="tabpanel">
                                            <div class="form-group m--margin-top-10">
                                                @Html.LabelFor(model => model.IBMCloud.OrganizationId, htmlAttributes: new { @class = "control-label" })
                                                @Html.EditorFor(model => model.IBMCloud.OrganizationId, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.IBMCloud.OrganizationId, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.IBMCloud.AppId, htmlAttributes: new { @class = "control-label" })
                                                @Html.EditorFor(model => model.IBMCloud.AppId, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.IBMCloud.AppId, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.IBMCloud.APIKey, htmlAttributes: new { @class = "control-label col-md-2" })
                                                @Html.EditorFor(model => model.IBMCloud.APIKey, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.IBMCloud.APIKey, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.IBMCloud.AuthToken, htmlAttributes: new { @class = "control-label col-md-2" })
                                                @Html.EditorFor(model => model.IBMCloud.AuthToken, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.IBMCloud.AuthToken, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.IBMCloud.DeviceType, htmlAttributes: new { @class = "control-label col-md-2" })
                                                @Html.EditorFor(model => model.IBMCloud.DeviceType, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.IBMCloud.DeviceType, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.IBMCloud.DeviceId, htmlAttributes: new { @class = "control-label col-md-2" })
                                                @Html.EditorFor(model => model.IBMCloud.DeviceId, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.IBMCloud.DeviceId, "", new { @class = "text-danger" })
                                            </div>


                                            <div class="form-group">
                                                @Html.LabelFor(model => model.IBMCloud.DeviceTokken, htmlAttributes: new { @class = "control-label col-md-2" })
                                                @Html.EditorFor(model => model.IBMCloud.DeviceTokken, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.IBMCloud.DeviceTokken, "", new { @class = "text-danger" })
                                            </div>


                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
                <!-- end::ModalForIBM -->
                }
                <!--end::Form-->
            </div>
            <!--end::Portlet-->
        </div>
    </div>
</div>




@section scripts{

<script>

        $(document).ready(function () {
            if ($('#CloudServices').val() == "IBM") {
                $('#Name').attr('disabled','disabled');
            }

        });

        var Get_CloudService = function () {

            if ($('#CloudServices').val() == "IBM") {
                $('#m_modal_IBM').modal('show');
            }
        }


        $('#CloudServices').on('change', function () {
            Get_CloudService();
        });


        $('#RegistrationDate').datepicker();


        $('#savebtn').on('click', function () {
            mApp.blockPage({
                overlayColor: "#000000",
                type: "loader",
                state: "primary",
                message: "Processing..."
            });
            $('#DevicesEditForm').submit();
        });

        var LoadModalForDetails = function (id) {
            // not remove this function because it use for open details of account form search click it use in easy auto complte funtion contact to development branch
            // in master page use in EasyautoCompleteSearch

            $('body').addClass('m-page--loading');

            $.ajax({
                type: "GET",
                url: "/Devices/PartialDetailsOnId",
                data: { id: id },
                contentType: "application/json; charset=utf-8",
                dataType: "text",
                success: function (response) {
                    console.log(response);

                    $('.modal-content').html('').html(response);

                    $('#m_modal_Details').modal('show');
                    //mApp.unblockPage();
                    $('body').removeClass('m-page--loading');
                },
                failure: function () {
                    alert("Failed!");
                    //mApp.unblockPage();
                    $('body').removeClass('m-page--loading');
                }
            });
        }

        $('#AccountId').on('change', function () {
            LoadCustomerAssetsDD();
        });

        var LoadCustomerAssetsDD = function () {

            var accountId = $('#AccountId').val();

            var obj = { accountId: accountId }
            $.ajax({
                type: "GET",
                url: "/Devices/GetCustomerAssetsForDD",
                data: obj,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: false,
                success: function (response) {
                    $('#CustomerAssetId').html('');
                    var options = '';
                    options += '<option value="Select">Select</option>';
                    for (var i = 0; i < response.length; i++) {
                        options += '<option value="' + response[i].Value + '">' + response[i].Text + '</option>';
                    }
                    $('#CustomerAssetId').append(options);
                },
                failure: function () {
                    alert("Failed!");
                }
            });
        }

</script>

}











